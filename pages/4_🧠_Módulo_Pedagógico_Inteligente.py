import streamlit as st
# Importando os dados dos arquivos BNCC
import bncc_infantil
import bncc_fundamental
import bncc_medio

st.set_page_config(page_title="Diagn√≥stico BNCC", page_icon="üî¨", layout="wide")

st.title("üî¨ M√≥dulo de Diagn√≥stico da BNCC")
st.warning("Esta √© uma vers√£o tempor√°ria para depura√ß√£o. Vamos encontrar o problema.")

if 'students' not in st.session_state or not st.session_state.students:
    st.info("‚ö†Ô∏è Cadastre um aluno no 'M√≥dulo do Aluno' para continuar.")
    st.stop()
else:
    student_list = [s['name'] for s in st.session_state.students]
    selected_student_name = st.selectbox("Selecione um Aluno (apenas para teste):", options=student_list)

st.header("Busca na BNCC")

etapa = st.selectbox("Etapa de Ensino", ["Educa√ß√£o Infantil", "Ensino Fundamental"])

st.markdown("---")
st.subheader("Informa√ß√µes de Diagn√≥stico:")

if etapa == "Educa√ß√£o Infantil":
    st.write("Modo: Educa√ß√£o Infantil")
    # L√≥gica de diagn√≥stico para Ed. Infantil
    campos = list(bncc_infantil.bncc_infantil.keys())
    st.write(f"**1. Campos de experi√™ncia encontrados:** `{campos}`")
    
    campo_selecionado = st.selectbox("Campo de Experi√™ncia", campos)
    st.write(f"**2. Voc√™ selecionou o campo:** `{campo_selecionado}`")
    
    objetivos = bncc_infantil.bncc_infantil.get(campo_selecionado, [])
    st.write(f"**3. O c√≥digo encontrou {len(objetivos)} objetivos para este campo.**")
    
    st.markdown("---")
    habilidades_selecionadas = st.multiselect("Selecione os Objetivos de Aprendizagem e Desenvolvimento:", options=objetivos)

elif etapa == "Ensino Fundamental":
    st.write("Modo: Ensino Fundamental")
    # L√≥gica de diagn√≥stico para Ed. Fundamental
    areas = list(bncc_fundamental.bncc_fundamental.keys())
    st.write(f"**1. √Åreas do conhecimento encontradas:** `{areas}`")
    area_selecionada = st.selectbox("√Årea do Conhecimento", areas)
    st.write(f"**2. Voc√™ selecionou a √°rea:** `{area_selecionada}`")

    area_data = bncc_fundamental.bncc_fundamental.get(area_selecionada, {})
    componentes = list(area_data.keys())
    st.write(f"**3. Componentes curriculares encontrados para '{area_selecionada}':** `{componentes}`")
    componente_selecionado = st.selectbox("Componente Curricular", componentes)
    st.write(f"**4. Voc√™ selecionou o componente:** `{componente_selecionado}`")
    
    componente_data = area_data.get(componente_selecionado, {})
    anos = list(componente_data.keys())
    st.write(f"**5. Anos encontrados para '{componente_selecionado}':** `{anos}`")
    ano_selecionado = st.selectbox("Ano", anos)
    st.write(f"**6. Voc√™ selecionou o ano:** `{ano_selecionado}`")

    habilidades = componente_data.get(ano_selecionado, [])
    st.write(f"**7. O c√≥digo encontrou {len(habilidades)} habilidades para '{ano_selecionado}'.**")
    
    st.markdown("---")
    habilidades_selecionadas = st.multiselect("Selecione as Habilidades:", options=habilidades)
